---
- name: Containers Deployment
  hosts: all
  become: True
  tasks:
  - name: Create back-end Network
    docker_network:
      name: back-end
  - name: Create front-end Network
    docker_network:
      name: front-end

  - name: Create the database container
    docker_container:
      name: db
      image: mysql/mysql-server:5.7
      state: started
      recreate: yes
      env:
        MYSQL_ROOT_PASSWORD: rootroot
        MYSQL_DATABASE: mydb
        MYSQL_USER: root
        MYSQL_PASSWORD: rootroot
      networks:
        - name: back-end
      purge_networks: yes
  - name: Wait for 10s before the db container is completely ready
    wait_for:
      timeout: 10
  - name: Copy backup.db to the VM
    copy:
      src: backup.db
      dest: "/home/{{ user }}"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0644
  - name: Import backup.db to the db container
    shell: docker exec -i db mysql -uroot -prootroot mydb < backup.db
    
  - name: Create API Container
    docker_container:
      name: api
      image: spendingjournal/api:production
      restart_policy: always
      state: started
      recreate: yes
      env:
        FLASK_APP: src/main.py
        PYTHONDONTWRITEBYTECODE: "1"
      ports:
        - "5000:5000"
      networks:
        - name: back-end
      purge_networks: yes

  - name: Create front-end Container
    docker_container:
      name: front-end
      image: spendingjournal/front-end:prod
      restart_policy: always
      state: started
      recreate: yes
      ports:
        - "80:80"
      networks:
        - name: front-end
